<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">

<struts>
			
    <constant name="struts.devMode" value="true" />
    <constant name="struts.enable.DynamicMethodInvocation" value="true"/>
    <constant name="struts.custom.i18n.resources" value="messageResource"/>
    <constant name="struts.i18n.encoding" value="utf-8"/>
    <constant name="struts.multipart.maxSize" value="55000000"/>
    
	<!-- 父包，用于什么都不写跳转到首页 -->
    <package name="default" namespace="/" extends="json-default">
    	<default-action-ref name="index" />
    	<action name="index">
    		<interceptor-ref name="defaultStack">  
    			<param name="exception.logEnabled">true</param>  
  			</interceptor-ref>  
        	<!-- result四种：dispatcher、redirect、chain、redirectAction -->
            <result type="redirectAction">index.html</result>
        </action>
    </package>

	<!-- 用户模块 -->
    <package name="user" namespace="/user" extends="default">
		<action name="userAction" class="com.bsb.user.UserAction">
		
			<!-- 用户获取验证码 -->
			<result name="getAuthCode" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 注册 -->
			<result name="login" type="json">
    			<param name="includeProperties">id,name,role,skill,phone,open_id,open_token,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
			<!-- 测试专用 -->
			<result name="test" type="json">
    			<param name="includeProperties">open_id,open_token</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 登录 -->
			<result name="signin" type="json">
    			<param name="includeProperties">id,name,role,skill,phone,reason,open_id,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- (Android)获取未发送的短信验证码 -->
			<result name="getUnSendCodeList" type="json">
    			<param name="includeProperties">msgList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 用于微信验证Token -->
			<result name="authToken" type="dispatcher">
    			<!-- <param name="includeProperties">echostr</param>
    			<param name="contentType">text/html</param>  -->
    		</result>
			<!-- 微信授权(返回首页) -->
			<result name="auth_return_index" type="redirect">/index_phone_test.html</result>
    		
		</action>
    </package>
    
    
    
	<!-- Post模块 -->
    <package name="post" namespace="/post" extends="default">
		<action name="postAction" class="com.bsb.post.PostAction">
		
			<!-- 开启“获取所有入驻的provider”线程(线程内部每隔1小时获取一次) -->
			<result name="startGetProviders" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 发布一个需求 -->
			<result name="postNeed" type="json">
    			<param name="includeProperties">count,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- (Android)获取抢单短信 -->
			<result name="getUnGrabMsgList" type="json">
    			<param name="includeProperties">msgList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 根据require_id获取需求详情 -->
			<result name="getNeedDetail" type="json">
    			<param name="includeProperties">needEntity.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- provider抢单 -->
			<result name="grabSingle" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- (Android)查询need表中30分钟未抢单的需求 -->
			<result name="query30MUnGrabMsgList" type="json">
    			<param name="includeProperties">msgList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 提高赏金 -->
			<result name="increaseMoney" type="json">
    			<param name="includeProperties">count,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- needer放弃订单 -->
			<result name="neederGiveUp" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取指定needer的所有订单情况 -->
			<result name="getOrderListByNeederId" type="json">
    			<param name="includeProperties">needList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取指定provider的所有订单情况 -->
			<result name="getOrderListByProviderId" type="json">
    			<param name="includeProperties">needList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取指定provider的个人信息 -->
			<result name="getUserEntityByProviderId" type="json">
    			<param name="includeProperties">userEntity.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 修改指定provider的擅长的技术 -->
			<result name="updateSkillByProviderId" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- (Android)查询need表未发送的信息，并设为已发送 -->
			<result name="queryUnPushNeederMsgList" type="json">
    			<param name="includeProperties">msgList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取某一条需求的状态 -->
			<result name="getStateById" type="json">
    			<param name="includeProperties">state,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取求助者发布的需求信息 -->
			<result name="getNeedEntityList" type="json">
    			<param name="includeProperties">needList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 管理员发布/修改一份合同 -->
			<result name="postContract" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 求助者确认合同 -->
			<result name="confirmContract" type="json">
    			<param name="includeProperties">count,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 大神放弃此单(确认订单前放弃) -->
			<result name="providerGiveupOrderPre" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 大神确认可以开始服务 -->
			<result name="providerConfirm" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 求助者重找大神 -->
			<result name="chongZhaoProvider" type="json">
    			<param name="includeProperties">needEntity,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 求助者付款成功 -->
			<result name="neederPay" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 大神完成开发 -->
			<result name="finishDevelop" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 求助者点击通过验收 -->
			<result name="confirmOrder" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 求助者/大神申请仲裁 -->
			<result name="applyArbitration" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 发布一条咨询客服信息 -->
			<result name="postFeedBack" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
    		
		</action>
    </package>
    
    
   	<!-- 后台管理模块 -->
    <package name="admin" namespace="/admin" extends="default">
		<action name="adminAction" class="com.bsb.admin.AdminAction">
		
			<!-- 获取所有用户信息 -->
			<result name="getAllUser" type="json">
    			<param name="includeProperties">userList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取所有反馈信息 -->
			<result name="getFeedback" type="json">
    			<param name="includeProperties">feedbackList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 处理一条反馈信息 -->
			<result name="doFeedback" type="json">
    			<param name="includeProperties">reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
    		
		</action>
    </package>
    
   	<!-- 微信接口模块 -->
    <package name="wechat" namespace="/wechat" extends="default">
		<action name="wechatAction" class="com.bsb.wechat.WeChatAction">
		
			<!-- 获取access_token -->
			<result name="getAccessToken" type="json">
    			<param name="includeProperties">access_token</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取ticket -->
			<result name="getTicket" type="json">
    			<param name="includeProperties">ticket</param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 获取所有用户信息 -->
			<result name="authToken" type="json">
    			<param name="includeProperties">userList.*,reason,result</param>
    			<param name="contentType">text/html</param> 
    		</result>
			<!-- 测试专用 -->
			<result name="test" type="json">
    			<param name="includeProperties"></param>
    			<param name="contentType">text/html</param> 
    		</result>
		
			<!-- 微信授权(返回首页) -->
			<result name="auth_return_index">/index_phone_test.html</result>
		
			<!-- 微信授权(返回登录页) -->
			<result name="auth_return_login">/login.html</result>
    		
    		<!-- 请求发送模板信息（测试） -->
    		<result name="getMuBanInfo" type="json">
    			<param name="includeProperties"></param>
    			<param name="contentType">text/html</param> 
    		</result>
		</action>
    </package>
</struts>
